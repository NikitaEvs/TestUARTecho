
TestUARTecho.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000009fc  00000a90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000072  00800110  00800110  00000aa0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000aa0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000afc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011e9  00000000  00000000  00000c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000923  00000000  00000000  00001df5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007bd  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00002ed8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004fe  00000000  00000000  000030d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000087f  00000000  00000000  000035d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003e51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ef       	ldi	r30, 0xFC	; 252
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 38       	cpi	r26, 0x82	; 130
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a5 01 	call	0x34a	; 0x34a <main>
  9e:	0c 94 fc 04 	jmp	0x9f8	; 0x9f8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcd_initPort>:

void lcd_sendStrVolatile(char volatile data[]){
	for(wchar_t i = 0; data[i] != '\0'; i++){
		lcd_sendChar(data[i]);
	}
}
  a6:	8a b1       	in	r24, 0x0a	; 10
  a8:	8c 6f       	ori	r24, 0xFC	; 252
  aa:	8a b9       	out	0x0a, r24	; 10
  ac:	08 95       	ret

000000ae <lcd_sendHalfByte>:
  ae:	5b 9a       	sbi	0x0b, 3	; 11
  b0:	e7 ec       	ldi	r30, 0xC7	; 199
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <lcd_sendHalfByte+0x6>
  b8:	00 c0       	rjmp	.+0      	; 0xba <lcd_sendHalfByte+0xc>
  ba:	00 00       	nop
  bc:	9b b1       	in	r25, 0x0b	; 11
  be:	9f 70       	andi	r25, 0x0F	; 15
  c0:	9b b9       	out	0x0b, r25	; 11
  c2:	9b b1       	in	r25, 0x0b	; 11
  c4:	82 95       	swap	r24
  c6:	80 7f       	andi	r24, 0xF0	; 240
  c8:	89 2b       	or	r24, r25
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	5b 98       	cbi	0x0b, 3	; 11
  ce:	87 ec       	ldi	r24, 0xC7	; 199
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_sendHalfByte+0x24>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_sendHalfByte+0x2a>
  d8:	00 00       	nop
  da:	08 95       	ret

000000dc <lcd_sendByte>:
  dc:	cf 93       	push	r28
  de:	c8 2f       	mov	r28, r24
  e0:	61 30       	cpi	r22, 0x01	; 1
  e2:	11 f4       	brne	.+4      	; 0xe8 <lcd_sendByte+0xc>
  e4:	5a 98       	cbi	0x0b, 2	; 11
  e6:	01 c0       	rjmp	.+2      	; 0xea <lcd_sendByte+0xe>
  e8:	5a 9a       	sbi	0x0b, 2	; 11
  ea:	8c 2f       	mov	r24, r28
  ec:	82 95       	swap	r24
  ee:	8f 70       	andi	r24, 0x0F	; 15
  f0:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
  f4:	8c 2f       	mov	r24, r28
  f6:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <lcd_init>:
  fe:	8f e5       	ldi	r24, 0x5F	; 95
 100:	9a ee       	ldi	r25, 0xEA	; 234
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <lcd_init+0x4>
 106:	00 c0       	rjmp	.+0      	; 0x108 <lcd_init+0xa>
 108:	00 00       	nop
 10a:	83 e0       	ldi	r24, 0x03	; 3
 10c:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
 110:	8f e1       	ldi	r24, 0x1F	; 31
 112:	9e e4       	ldi	r25, 0x4E	; 78
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <lcd_init+0x16>
 118:	00 c0       	rjmp	.+0      	; 0x11a <lcd_init+0x1c>
 11a:	00 00       	nop
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
 122:	8f e8       	ldi	r24, 0x8F	; 143
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <lcd_init+0x28>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <lcd_init+0x2e>
 12c:	00 00       	nop
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
 134:	8f e9       	ldi	r24, 0x9F	; 159
 136:	9f e0       	ldi	r25, 0x0F	; 15
 138:	01 97       	sbiw	r24, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <lcd_init+0x3a>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <lcd_init+0x40>
 13e:	00 00       	nop
 140:	82 e0       	ldi	r24, 0x02	; 2
 142:	0e 94 57 00 	call	0xae	; 0xae <lcd_sendHalfByte>
 146:	8f e9       	ldi	r24, 0x9F	; 159
 148:	9f e0       	ldi	r25, 0x0F	; 15
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <lcd_init+0x4c>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <lcd_init+0x52>
 150:	00 00       	nop
 152:	61 e0       	ldi	r22, 0x01	; 1
 154:	88 e2       	ldi	r24, 0x28	; 40
 156:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 15a:	8f e9       	ldi	r24, 0x9F	; 159
 15c:	9f e0       	ldi	r25, 0x0F	; 15
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_init+0x60>
 162:	00 c0       	rjmp	.+0      	; 0x164 <lcd_init+0x66>
 164:	00 00       	nop
 166:	61 e0       	ldi	r22, 0x01	; 1
 168:	8c e0       	ldi	r24, 0x0C	; 12
 16a:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 16e:	8f e9       	ldi	r24, 0x9F	; 159
 170:	9f e0       	ldi	r25, 0x0F	; 15
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <lcd_init+0x74>
 176:	00 c0       	rjmp	.+0      	; 0x178 <lcd_init+0x7a>
 178:	00 00       	nop
 17a:	61 e0       	ldi	r22, 0x01	; 1
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 182:	8f e9       	ldi	r24, 0x9F	; 159
 184:	9f e0       	ldi	r25, 0x0F	; 15
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <lcd_init+0x88>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <lcd_init+0x8e>
 18c:	00 00       	nop
 18e:	08 95       	ret

00000190 <lcd_clear>:
 190:	61 e0       	ldi	r22, 0x01	; 1
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 198:	8f e6       	ldi	r24, 0x6F	; 111
 19a:	97 e1       	ldi	r25, 0x17	; 23
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <lcd_clear+0xc>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcd_clear+0x12>
 1a2:	00 00       	nop
 1a4:	08 95       	ret

000001a6 <lcd_setPos>:
 1a6:	21 e0       	ldi	r18, 0x01	; 1
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	26 1b       	sub	r18, r22
 1ac:	31 09       	sbc	r19, r1
 1ae:	90 e4       	ldi	r25, 0x40	; 64
 1b0:	29 9f       	mul	r18, r25
 1b2:	80 0d       	add	r24, r0
 1b4:	11 24       	eor	r1, r1
 1b6:	61 e0       	ldi	r22, 0x01	; 1
 1b8:	80 68       	ori	r24, 0x80	; 128
 1ba:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 1be:	08 95       	ret

000001c0 <lcd_sendChar>:
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	0e 94 6e 00 	call	0xdc	; 0xdc <lcd_sendByte>
 1c6:	08 95       	ret

000001c8 <lcd_sendStr>:
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	ec 01       	movw	r28, r24
 1ce:	88 81       	ld	r24, Y
 1d0:	88 23       	and	r24, r24
 1d2:	31 f0       	breq	.+12     	; 0x1e0 <lcd_sendStr+0x18>
 1d4:	21 96       	adiw	r28, 0x01	; 1
 1d6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <lcd_sendChar>
 1da:	89 91       	ld	r24, Y+
 1dc:	81 11       	cpse	r24, r1
 1de:	fb cf       	rjmp	.-10     	; 0x1d6 <lcd_sendStr+0xe>
 1e0:	df 91       	pop	r29
 1e2:	cf 91       	pop	r28
 1e4:	08 95       	ret

000001e6 <lcd_sendInt>:

/* Send one int */

void lcd_sendInt(int data){
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	2a 97       	sbiw	r28, 0x0a	; 10
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
	char str[10];
	sprintf(str, "%d", data);
 1fe:	9f 93       	push	r25
 200:	8f 93       	push	r24
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	9f 93       	push	r25
 208:	8f 93       	push	r24
 20a:	8e 01       	movw	r16, r28
 20c:	0f 5f       	subi	r16, 0xFF	; 255
 20e:	1f 4f       	sbci	r17, 0xFF	; 255
 210:	1f 93       	push	r17
 212:	0f 93       	push	r16
 214:	0e 94 12 02 	call	0x424	; 0x424 <sprintf>
	lcd_sendStr(str);
 218:	c8 01       	movw	r24, r16
 21a:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <lcd_sendStr>
}
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	0f 90       	pop	r0
 224:	0f 90       	pop	r0
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	2a 96       	adiw	r28, 0x0a	; 10
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	08 95       	ret

00000240 <clearAll>:

void debugData(){
	lcd_clear();
	lcd_setPos(0,1);
	lcd_sendStr("val: ");
	lcd_sendStr(buff);
 240:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <count>
 244:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <count+0x1>
 248:	00 97       	sbiw	r24, 0x00	; 0
 24a:	41 f0       	breq	.+16     	; 0x25c <clearAll+0x1c>
 24c:	ee e1       	ldi	r30, 0x1E	; 30
 24e:	f1 e0       	ldi	r31, 0x01	; 1
 250:	82 5e       	subi	r24, 0xE2	; 226
 252:	9e 4f       	sbci	r25, 0xFE	; 254
 254:	11 92       	st	Z+, r1
 256:	e8 17       	cp	r30, r24
 258:	f9 07       	cpc	r31, r25
 25a:	e1 f7       	brne	.-8      	; 0x254 <clearAll+0x14>
 25c:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <count+0x1>
 260:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <count>
 264:	08 95       	ret

00000266 <initUART>:
 266:	50 98       	cbi	0x0a, 0	; 10
 268:	51 9a       	sbi	0x0a, 1	; 10
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 270:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 274:	88 e1       	ldi	r24, 0x18	; 24
 276:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 27a:	8e e0       	ldi	r24, 0x0E	; 14
 27c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 280:	08 95       	ret

00000282 <__vector_11>:
 282:	1f 92       	push	r1
 284:	0f 92       	push	r0
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	0f 92       	push	r0
 28a:	11 24       	eor	r1, r1
 28c:	8f 93       	push	r24
 28e:	9f 93       	push	r25
 290:	af 93       	push	r26
 292:	bf 93       	push	r27
 294:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <millis>
 298:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <millis+0x1>
 29c:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <millis+0x2>
 2a0:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <millis+0x3>
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	a1 1d       	adc	r26, r1
 2a8:	b1 1d       	adc	r27, r1
 2aa:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <millis>
 2ae:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <millis+0x1>
 2b2:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <millis+0x2>
 2b6:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <millis+0x3>
 2ba:	bf 91       	pop	r27
 2bc:	af 91       	pop	r26
 2be:	9f 91       	pop	r25
 2c0:	8f 91       	pop	r24
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <timer_init>:
 2cc:	e1 e8       	ldi	r30, 0x81	; 129
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	8b 60       	ori	r24, 0x0B	; 11
 2d4:	80 83       	st	Z, r24
 2d6:	ef e6       	ldi	r30, 0x6F	; 111
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	82 60       	ori	r24, 0x02	; 2
 2de:	80 83       	st	Z, r24
 2e0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2e4:	8a ef       	ldi	r24, 0xFA	; 250
 2e6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2ea:	78 94       	sei
 2ec:	08 95       	ret

000002ee <debugMode>:
 2ee:	0e 94 53 00 	call	0xa6	; 0xa6 <lcd_initPort>
 2f2:	0e 94 7f 00 	call	0xfe	; 0xfe <lcd_init>
 2f6:	0e 94 66 01 	call	0x2cc	; 0x2cc <timer_init>
 2fa:	61 e0       	ldi	r22, 0x01	; 1
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcd_setPos>
 302:	83 e0       	ldi	r24, 0x03	; 3
 304:	91 e0       	ldi	r25, 0x01	; 1
 306:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <lcd_sendStr>
 30a:	20 9a       	sbi	0x04, 0	; 4
 30c:	28 9a       	sbi	0x05, 0	; 5
 30e:	2f ef       	ldi	r18, 0xFF	; 255
 310:	89 e6       	ldi	r24, 0x69	; 105
 312:	98 e1       	ldi	r25, 0x18	; 24
 314:	21 50       	subi	r18, 0x01	; 1
 316:	80 40       	sbci	r24, 0x00	; 0
 318:	90 40       	sbci	r25, 0x00	; 0
 31a:	e1 f7       	brne	.-8      	; 0x314 <debugMode+0x26>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <debugMode+0x30>
 31e:	00 00       	nop
 320:	28 98       	cbi	0x05, 0	; 5
 322:	2f ef       	ldi	r18, 0xFF	; 255
 324:	89 e6       	ldi	r24, 0x69	; 105
 326:	98 e1       	ldi	r25, 0x18	; 24
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	80 40       	sbci	r24, 0x00	; 0
 32c:	90 40       	sbci	r25, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <debugMode+0x3a>
 330:	00 c0       	rjmp	.+0      	; 0x332 <debugMode+0x44>
 332:	00 00       	nop
 334:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_clear>
 338:	08 95       	ret

0000033a <giveUART>:
}


unsigned char giveUART(){
	while (!(UCSR0A & (1<<RXC0)));
 33a:	e0 ec       	ldi	r30, 0xC0	; 192
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	80 81       	ld	r24, Z
 340:	88 23       	and	r24, r24
 342:	ec f7       	brge	.-6      	; 0x33e <giveUART+0x4>
	return UDR0;
 344:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
 348:	08 95       	ret

0000034a <main>:



int main(void){
	DDRD &=(~(1<<PIND0)); // RX - input
 34a:	50 98       	cbi	0x0a, 0	; 10
	initUART();
 34c:	0e 94 33 01 	call	0x266	; 0x266 <initUART>
	debugMode();
 350:	0e 94 77 01 	call	0x2ee	; 0x2ee <debugMode>
		}
		if(countMeasure >= 1000){
			lcd_clear();
			lcd_setPos(0,1);
			lcd_sendStr("val: ");
			lcd_sendInt(millis - lastMillis);
 354:	c4 e1       	ldi	r28, 0x14	; 20
 356:	d1 e0       	ldi	r29, 0x01	; 1
int main(void){
	DDRD &=(~(1<<PIND0)); // RX - input
	initUART();
	debugMode();
    while (1){
		char input = giveUART();
 358:	0e 94 9d 01 	call	0x33a	; 0x33a <giveUART>
		if(input == '\n'){
 35c:	8a 30       	cpi	r24, 0x0A	; 10
 35e:	b1 f4       	brne	.+44     	; 0x38c <main+0x42>
			countMeasure++;
 360:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 364:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x1>
 368:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <__data_end+0x2>
 36c:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <__data_end+0x3>
 370:	01 96       	adiw	r24, 0x01	; 1
 372:	a1 1d       	adc	r26, r1
 374:	b1 1d       	adc	r27, r1
 376:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 37a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x1>
 37e:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <__data_end+0x2>
 382:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <__data_end+0x3>
			//debugData();
			clearAll();
 386:	0e 94 20 01 	call	0x240	; 0x240 <clearAll>
 38a:	0e c0       	rjmp	.+28     	; 0x3a8 <main+0x5e>
		} else {
			buff[count] = input;
 38c:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <count>
 390:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <count+0x1>
 394:	f9 01       	movw	r30, r18
 396:	e2 5e       	subi	r30, 0xE2	; 226
 398:	fe 4f       	sbci	r31, 0xFE	; 254
 39a:	80 83       	st	Z, r24
			count++;
 39c:	2f 5f       	subi	r18, 0xFF	; 255
 39e:	3f 4f       	sbci	r19, 0xFF	; 255
 3a0:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <count+0x1>
 3a4:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <count>
		}
		if(countMeasure >= 1000){
 3a8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 3ac:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x1>
 3b0:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <__data_end+0x2>
 3b4:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <__data_end+0x3>
 3b8:	88 3e       	cpi	r24, 0xE8	; 232
 3ba:	93 40       	sbci	r25, 0x03	; 3
 3bc:	a1 05       	cpc	r26, r1
 3be:	b1 05       	cpc	r27, r1
 3c0:	58 f2       	brcs	.-106    	; 0x358 <main+0xe>
			lcd_clear();
 3c2:	0e 94 c8 00 	call	0x190	; 0x190 <lcd_clear>
			lcd_setPos(0,1);
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcd_setPos>
			lcd_sendStr("val: ");
 3ce:	89 e0       	ldi	r24, 0x09	; 9
 3d0:	91 e0       	ldi	r25, 0x01	; 1
 3d2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <lcd_sendStr>
			lcd_sendInt(millis - lastMillis);
 3d6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <millis>
 3da:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <millis+0x1>
 3de:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <millis+0x2>
 3e2:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <millis+0x3>
 3e6:	28 81       	ld	r18, Y
 3e8:	39 81       	ldd	r19, Y+1	; 0x01
 3ea:	82 1b       	sub	r24, r18
 3ec:	93 0b       	sbc	r25, r19
 3ee:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <lcd_sendInt>
			lastMillis = millis;
 3f2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <millis>
 3f6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <millis+0x1>
 3fa:	a0 91 1a 01 	lds	r26, 0x011A	; 0x80011a <millis+0x2>
 3fe:	b0 91 1b 01 	lds	r27, 0x011B	; 0x80011b <millis+0x3>
 402:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <lastMillis>
 406:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <lastMillis+0x1>
 40a:	a0 93 16 01 	sts	0x0116, r26	; 0x800116 <lastMillis+0x2>
 40e:	b0 93 17 01 	sts	0x0117, r27	; 0x800117 <lastMillis+0x3>
			countMeasure = 0;
 412:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
 416:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x1>
 41a:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <__data_end+0x2>
 41e:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <__data_end+0x3>
 422:	9a cf       	rjmp	.-204    	; 0x358 <main+0xe>

00000424 <sprintf>:
 424:	ae e0       	ldi	r26, 0x0E	; 14
 426:	b0 e0       	ldi	r27, 0x00	; 0
 428:	e8 e1       	ldi	r30, 0x18	; 24
 42a:	f2 e0       	ldi	r31, 0x02	; 2
 42c:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__prologue_saves__+0x1c>
 430:	0d 89       	ldd	r16, Y+21	; 0x15
 432:	1e 89       	ldd	r17, Y+22	; 0x16
 434:	86 e0       	ldi	r24, 0x06	; 6
 436:	8c 83       	std	Y+4, r24	; 0x04
 438:	1a 83       	std	Y+2, r17	; 0x02
 43a:	09 83       	std	Y+1, r16	; 0x01
 43c:	8f ef       	ldi	r24, 0xFF	; 255
 43e:	9f e7       	ldi	r25, 0x7F	; 127
 440:	9e 83       	std	Y+6, r25	; 0x06
 442:	8d 83       	std	Y+5, r24	; 0x05
 444:	ae 01       	movw	r20, r28
 446:	47 5e       	subi	r20, 0xE7	; 231
 448:	5f 4f       	sbci	r21, 0xFF	; 255
 44a:	6f 89       	ldd	r22, Y+23	; 0x17
 44c:	78 8d       	ldd	r23, Y+24	; 0x18
 44e:	ce 01       	movw	r24, r28
 450:	01 96       	adiw	r24, 0x01	; 1
 452:	0e 94 34 02 	call	0x468	; 0x468 <vfprintf>
 456:	ef 81       	ldd	r30, Y+7	; 0x07
 458:	f8 85       	ldd	r31, Y+8	; 0x08
 45a:	e0 0f       	add	r30, r16
 45c:	f1 1f       	adc	r31, r17
 45e:	10 82       	st	Z, r1
 460:	2e 96       	adiw	r28, 0x0e	; 14
 462:	e4 e0       	ldi	r30, 0x04	; 4
 464:	0c 94 ef 04 	jmp	0x9de	; 0x9de <__epilogue_restores__+0x1c>

00000468 <vfprintf>:
 468:	ab e0       	ldi	r26, 0x0B	; 11
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	ea e3       	ldi	r30, 0x3A	; 58
 46e:	f2 e0       	ldi	r31, 0x02	; 2
 470:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__prologue_saves__>
 474:	6c 01       	movw	r12, r24
 476:	7b 01       	movw	r14, r22
 478:	8a 01       	movw	r16, r20
 47a:	fc 01       	movw	r30, r24
 47c:	17 82       	std	Z+7, r1	; 0x07
 47e:	16 82       	std	Z+6, r1	; 0x06
 480:	83 81       	ldd	r24, Z+3	; 0x03
 482:	81 ff       	sbrs	r24, 1
 484:	cc c1       	rjmp	.+920    	; 0x81e <vfprintf+0x3b6>
 486:	ce 01       	movw	r24, r28
 488:	01 96       	adiw	r24, 0x01	; 1
 48a:	3c 01       	movw	r6, r24
 48c:	f6 01       	movw	r30, r12
 48e:	93 81       	ldd	r25, Z+3	; 0x03
 490:	f7 01       	movw	r30, r14
 492:	93 fd       	sbrc	r25, 3
 494:	85 91       	lpm	r24, Z+
 496:	93 ff       	sbrs	r25, 3
 498:	81 91       	ld	r24, Z+
 49a:	7f 01       	movw	r14, r30
 49c:	88 23       	and	r24, r24
 49e:	09 f4       	brne	.+2      	; 0x4a2 <vfprintf+0x3a>
 4a0:	ba c1       	rjmp	.+884    	; 0x816 <vfprintf+0x3ae>
 4a2:	85 32       	cpi	r24, 0x25	; 37
 4a4:	39 f4       	brne	.+14     	; 0x4b4 <vfprintf+0x4c>
 4a6:	93 fd       	sbrc	r25, 3
 4a8:	85 91       	lpm	r24, Z+
 4aa:	93 ff       	sbrs	r25, 3
 4ac:	81 91       	ld	r24, Z+
 4ae:	7f 01       	movw	r14, r30
 4b0:	85 32       	cpi	r24, 0x25	; 37
 4b2:	29 f4       	brne	.+10     	; 0x4be <vfprintf+0x56>
 4b4:	b6 01       	movw	r22, r12
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 4bc:	e7 cf       	rjmp	.-50     	; 0x48c <vfprintf+0x24>
 4be:	91 2c       	mov	r9, r1
 4c0:	21 2c       	mov	r2, r1
 4c2:	31 2c       	mov	r3, r1
 4c4:	ff e1       	ldi	r31, 0x1F	; 31
 4c6:	f3 15       	cp	r31, r3
 4c8:	d8 f0       	brcs	.+54     	; 0x500 <vfprintf+0x98>
 4ca:	8b 32       	cpi	r24, 0x2B	; 43
 4cc:	79 f0       	breq	.+30     	; 0x4ec <vfprintf+0x84>
 4ce:	38 f4       	brcc	.+14     	; 0x4de <vfprintf+0x76>
 4d0:	80 32       	cpi	r24, 0x20	; 32
 4d2:	79 f0       	breq	.+30     	; 0x4f2 <vfprintf+0x8a>
 4d4:	83 32       	cpi	r24, 0x23	; 35
 4d6:	a1 f4       	brne	.+40     	; 0x500 <vfprintf+0x98>
 4d8:	23 2d       	mov	r18, r3
 4da:	20 61       	ori	r18, 0x10	; 16
 4dc:	1d c0       	rjmp	.+58     	; 0x518 <vfprintf+0xb0>
 4de:	8d 32       	cpi	r24, 0x2D	; 45
 4e0:	61 f0       	breq	.+24     	; 0x4fa <vfprintf+0x92>
 4e2:	80 33       	cpi	r24, 0x30	; 48
 4e4:	69 f4       	brne	.+26     	; 0x500 <vfprintf+0x98>
 4e6:	23 2d       	mov	r18, r3
 4e8:	21 60       	ori	r18, 0x01	; 1
 4ea:	16 c0       	rjmp	.+44     	; 0x518 <vfprintf+0xb0>
 4ec:	83 2d       	mov	r24, r3
 4ee:	82 60       	ori	r24, 0x02	; 2
 4f0:	38 2e       	mov	r3, r24
 4f2:	e3 2d       	mov	r30, r3
 4f4:	e4 60       	ori	r30, 0x04	; 4
 4f6:	3e 2e       	mov	r3, r30
 4f8:	2a c0       	rjmp	.+84     	; 0x54e <vfprintf+0xe6>
 4fa:	f3 2d       	mov	r31, r3
 4fc:	f8 60       	ori	r31, 0x08	; 8
 4fe:	1d c0       	rjmp	.+58     	; 0x53a <vfprintf+0xd2>
 500:	37 fc       	sbrc	r3, 7
 502:	2d c0       	rjmp	.+90     	; 0x55e <vfprintf+0xf6>
 504:	20 ed       	ldi	r18, 0xD0	; 208
 506:	28 0f       	add	r18, r24
 508:	2a 30       	cpi	r18, 0x0A	; 10
 50a:	40 f0       	brcs	.+16     	; 0x51c <vfprintf+0xb4>
 50c:	8e 32       	cpi	r24, 0x2E	; 46
 50e:	b9 f4       	brne	.+46     	; 0x53e <vfprintf+0xd6>
 510:	36 fc       	sbrc	r3, 6
 512:	81 c1       	rjmp	.+770    	; 0x816 <vfprintf+0x3ae>
 514:	23 2d       	mov	r18, r3
 516:	20 64       	ori	r18, 0x40	; 64
 518:	32 2e       	mov	r3, r18
 51a:	19 c0       	rjmp	.+50     	; 0x54e <vfprintf+0xe6>
 51c:	36 fe       	sbrs	r3, 6
 51e:	06 c0       	rjmp	.+12     	; 0x52c <vfprintf+0xc4>
 520:	8a e0       	ldi	r24, 0x0A	; 10
 522:	98 9e       	mul	r9, r24
 524:	20 0d       	add	r18, r0
 526:	11 24       	eor	r1, r1
 528:	92 2e       	mov	r9, r18
 52a:	11 c0       	rjmp	.+34     	; 0x54e <vfprintf+0xe6>
 52c:	ea e0       	ldi	r30, 0x0A	; 10
 52e:	2e 9e       	mul	r2, r30
 530:	20 0d       	add	r18, r0
 532:	11 24       	eor	r1, r1
 534:	22 2e       	mov	r2, r18
 536:	f3 2d       	mov	r31, r3
 538:	f0 62       	ori	r31, 0x20	; 32
 53a:	3f 2e       	mov	r3, r31
 53c:	08 c0       	rjmp	.+16     	; 0x54e <vfprintf+0xe6>
 53e:	8c 36       	cpi	r24, 0x6C	; 108
 540:	21 f4       	brne	.+8      	; 0x54a <vfprintf+0xe2>
 542:	83 2d       	mov	r24, r3
 544:	80 68       	ori	r24, 0x80	; 128
 546:	38 2e       	mov	r3, r24
 548:	02 c0       	rjmp	.+4      	; 0x54e <vfprintf+0xe6>
 54a:	88 36       	cpi	r24, 0x68	; 104
 54c:	41 f4       	brne	.+16     	; 0x55e <vfprintf+0xf6>
 54e:	f7 01       	movw	r30, r14
 550:	93 fd       	sbrc	r25, 3
 552:	85 91       	lpm	r24, Z+
 554:	93 ff       	sbrs	r25, 3
 556:	81 91       	ld	r24, Z+
 558:	7f 01       	movw	r14, r30
 55a:	81 11       	cpse	r24, r1
 55c:	b3 cf       	rjmp	.-154    	; 0x4c4 <vfprintf+0x5c>
 55e:	98 2f       	mov	r25, r24
 560:	9f 7d       	andi	r25, 0xDF	; 223
 562:	95 54       	subi	r25, 0x45	; 69
 564:	93 30       	cpi	r25, 0x03	; 3
 566:	28 f4       	brcc	.+10     	; 0x572 <vfprintf+0x10a>
 568:	0c 5f       	subi	r16, 0xFC	; 252
 56a:	1f 4f       	sbci	r17, 0xFF	; 255
 56c:	9f e3       	ldi	r25, 0x3F	; 63
 56e:	99 83       	std	Y+1, r25	; 0x01
 570:	0d c0       	rjmp	.+26     	; 0x58c <vfprintf+0x124>
 572:	83 36       	cpi	r24, 0x63	; 99
 574:	31 f0       	breq	.+12     	; 0x582 <vfprintf+0x11a>
 576:	83 37       	cpi	r24, 0x73	; 115
 578:	71 f0       	breq	.+28     	; 0x596 <vfprintf+0x12e>
 57a:	83 35       	cpi	r24, 0x53	; 83
 57c:	09 f0       	breq	.+2      	; 0x580 <vfprintf+0x118>
 57e:	59 c0       	rjmp	.+178    	; 0x632 <vfprintf+0x1ca>
 580:	21 c0       	rjmp	.+66     	; 0x5c4 <vfprintf+0x15c>
 582:	f8 01       	movw	r30, r16
 584:	80 81       	ld	r24, Z
 586:	89 83       	std	Y+1, r24	; 0x01
 588:	0e 5f       	subi	r16, 0xFE	; 254
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	88 24       	eor	r8, r8
 58e:	83 94       	inc	r8
 590:	91 2c       	mov	r9, r1
 592:	53 01       	movw	r10, r6
 594:	13 c0       	rjmp	.+38     	; 0x5bc <vfprintf+0x154>
 596:	28 01       	movw	r4, r16
 598:	f2 e0       	ldi	r31, 0x02	; 2
 59a:	4f 0e       	add	r4, r31
 59c:	51 1c       	adc	r5, r1
 59e:	f8 01       	movw	r30, r16
 5a0:	a0 80       	ld	r10, Z
 5a2:	b1 80       	ldd	r11, Z+1	; 0x01
 5a4:	36 fe       	sbrs	r3, 6
 5a6:	03 c0       	rjmp	.+6      	; 0x5ae <vfprintf+0x146>
 5a8:	69 2d       	mov	r22, r9
 5aa:	70 e0       	ldi	r23, 0x00	; 0
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <vfprintf+0x14a>
 5ae:	6f ef       	ldi	r22, 0xFF	; 255
 5b0:	7f ef       	ldi	r23, 0xFF	; 255
 5b2:	c5 01       	movw	r24, r10
 5b4:	0e 94 20 04 	call	0x840	; 0x840 <strnlen>
 5b8:	4c 01       	movw	r8, r24
 5ba:	82 01       	movw	r16, r4
 5bc:	f3 2d       	mov	r31, r3
 5be:	ff 77       	andi	r31, 0x7F	; 127
 5c0:	3f 2e       	mov	r3, r31
 5c2:	16 c0       	rjmp	.+44     	; 0x5f0 <vfprintf+0x188>
 5c4:	28 01       	movw	r4, r16
 5c6:	22 e0       	ldi	r18, 0x02	; 2
 5c8:	42 0e       	add	r4, r18
 5ca:	51 1c       	adc	r5, r1
 5cc:	f8 01       	movw	r30, r16
 5ce:	a0 80       	ld	r10, Z
 5d0:	b1 80       	ldd	r11, Z+1	; 0x01
 5d2:	36 fe       	sbrs	r3, 6
 5d4:	03 c0       	rjmp	.+6      	; 0x5dc <vfprintf+0x174>
 5d6:	69 2d       	mov	r22, r9
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <vfprintf+0x178>
 5dc:	6f ef       	ldi	r22, 0xFF	; 255
 5de:	7f ef       	ldi	r23, 0xFF	; 255
 5e0:	c5 01       	movw	r24, r10
 5e2:	0e 94 15 04 	call	0x82a	; 0x82a <strnlen_P>
 5e6:	4c 01       	movw	r8, r24
 5e8:	f3 2d       	mov	r31, r3
 5ea:	f0 68       	ori	r31, 0x80	; 128
 5ec:	3f 2e       	mov	r3, r31
 5ee:	82 01       	movw	r16, r4
 5f0:	33 fc       	sbrc	r3, 3
 5f2:	1b c0       	rjmp	.+54     	; 0x62a <vfprintf+0x1c2>
 5f4:	82 2d       	mov	r24, r2
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	88 16       	cp	r8, r24
 5fa:	99 06       	cpc	r9, r25
 5fc:	b0 f4       	brcc	.+44     	; 0x62a <vfprintf+0x1c2>
 5fe:	b6 01       	movw	r22, r12
 600:	80 e2       	ldi	r24, 0x20	; 32
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 608:	2a 94       	dec	r2
 60a:	f4 cf       	rjmp	.-24     	; 0x5f4 <vfprintf+0x18c>
 60c:	f5 01       	movw	r30, r10
 60e:	37 fc       	sbrc	r3, 7
 610:	85 91       	lpm	r24, Z+
 612:	37 fe       	sbrs	r3, 7
 614:	81 91       	ld	r24, Z+
 616:	5f 01       	movw	r10, r30
 618:	b6 01       	movw	r22, r12
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 620:	21 10       	cpse	r2, r1
 622:	2a 94       	dec	r2
 624:	21 e0       	ldi	r18, 0x01	; 1
 626:	82 1a       	sub	r8, r18
 628:	91 08       	sbc	r9, r1
 62a:	81 14       	cp	r8, r1
 62c:	91 04       	cpc	r9, r1
 62e:	71 f7       	brne	.-36     	; 0x60c <vfprintf+0x1a4>
 630:	e8 c0       	rjmp	.+464    	; 0x802 <vfprintf+0x39a>
 632:	84 36       	cpi	r24, 0x64	; 100
 634:	11 f0       	breq	.+4      	; 0x63a <vfprintf+0x1d2>
 636:	89 36       	cpi	r24, 0x69	; 105
 638:	41 f5       	brne	.+80     	; 0x68a <vfprintf+0x222>
 63a:	f8 01       	movw	r30, r16
 63c:	37 fe       	sbrs	r3, 7
 63e:	07 c0       	rjmp	.+14     	; 0x64e <vfprintf+0x1e6>
 640:	60 81       	ld	r22, Z
 642:	71 81       	ldd	r23, Z+1	; 0x01
 644:	82 81       	ldd	r24, Z+2	; 0x02
 646:	93 81       	ldd	r25, Z+3	; 0x03
 648:	0c 5f       	subi	r16, 0xFC	; 252
 64a:	1f 4f       	sbci	r17, 0xFF	; 255
 64c:	08 c0       	rjmp	.+16     	; 0x65e <vfprintf+0x1f6>
 64e:	60 81       	ld	r22, Z
 650:	71 81       	ldd	r23, Z+1	; 0x01
 652:	07 2e       	mov	r0, r23
 654:	00 0c       	add	r0, r0
 656:	88 0b       	sbc	r24, r24
 658:	99 0b       	sbc	r25, r25
 65a:	0e 5f       	subi	r16, 0xFE	; 254
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	f3 2d       	mov	r31, r3
 660:	ff 76       	andi	r31, 0x6F	; 111
 662:	3f 2e       	mov	r3, r31
 664:	97 ff       	sbrs	r25, 7
 666:	09 c0       	rjmp	.+18     	; 0x67a <vfprintf+0x212>
 668:	90 95       	com	r25
 66a:	80 95       	com	r24
 66c:	70 95       	com	r23
 66e:	61 95       	neg	r22
 670:	7f 4f       	sbci	r23, 0xFF	; 255
 672:	8f 4f       	sbci	r24, 0xFF	; 255
 674:	9f 4f       	sbci	r25, 0xFF	; 255
 676:	f0 68       	ori	r31, 0x80	; 128
 678:	3f 2e       	mov	r3, r31
 67a:	2a e0       	ldi	r18, 0x0A	; 10
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	a3 01       	movw	r20, r6
 680:	0e 94 67 04 	call	0x8ce	; 0x8ce <__ultoa_invert>
 684:	88 2e       	mov	r8, r24
 686:	86 18       	sub	r8, r6
 688:	45 c0       	rjmp	.+138    	; 0x714 <vfprintf+0x2ac>
 68a:	85 37       	cpi	r24, 0x75	; 117
 68c:	31 f4       	brne	.+12     	; 0x69a <vfprintf+0x232>
 68e:	23 2d       	mov	r18, r3
 690:	2f 7e       	andi	r18, 0xEF	; 239
 692:	b2 2e       	mov	r11, r18
 694:	2a e0       	ldi	r18, 0x0A	; 10
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	25 c0       	rjmp	.+74     	; 0x6e4 <vfprintf+0x27c>
 69a:	93 2d       	mov	r25, r3
 69c:	99 7f       	andi	r25, 0xF9	; 249
 69e:	b9 2e       	mov	r11, r25
 6a0:	8f 36       	cpi	r24, 0x6F	; 111
 6a2:	c1 f0       	breq	.+48     	; 0x6d4 <vfprintf+0x26c>
 6a4:	18 f4       	brcc	.+6      	; 0x6ac <vfprintf+0x244>
 6a6:	88 35       	cpi	r24, 0x58	; 88
 6a8:	79 f0       	breq	.+30     	; 0x6c8 <vfprintf+0x260>
 6aa:	b5 c0       	rjmp	.+362    	; 0x816 <vfprintf+0x3ae>
 6ac:	80 37       	cpi	r24, 0x70	; 112
 6ae:	19 f0       	breq	.+6      	; 0x6b6 <vfprintf+0x24e>
 6b0:	88 37       	cpi	r24, 0x78	; 120
 6b2:	21 f0       	breq	.+8      	; 0x6bc <vfprintf+0x254>
 6b4:	b0 c0       	rjmp	.+352    	; 0x816 <vfprintf+0x3ae>
 6b6:	e9 2f       	mov	r30, r25
 6b8:	e0 61       	ori	r30, 0x10	; 16
 6ba:	be 2e       	mov	r11, r30
 6bc:	b4 fe       	sbrs	r11, 4
 6be:	0d c0       	rjmp	.+26     	; 0x6da <vfprintf+0x272>
 6c0:	fb 2d       	mov	r31, r11
 6c2:	f4 60       	ori	r31, 0x04	; 4
 6c4:	bf 2e       	mov	r11, r31
 6c6:	09 c0       	rjmp	.+18     	; 0x6da <vfprintf+0x272>
 6c8:	34 fe       	sbrs	r3, 4
 6ca:	0a c0       	rjmp	.+20     	; 0x6e0 <vfprintf+0x278>
 6cc:	29 2f       	mov	r18, r25
 6ce:	26 60       	ori	r18, 0x06	; 6
 6d0:	b2 2e       	mov	r11, r18
 6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <vfprintf+0x278>
 6d4:	28 e0       	ldi	r18, 0x08	; 8
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	05 c0       	rjmp	.+10     	; 0x6e4 <vfprintf+0x27c>
 6da:	20 e1       	ldi	r18, 0x10	; 16
 6dc:	30 e0       	ldi	r19, 0x00	; 0
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <vfprintf+0x27c>
 6e0:	20 e1       	ldi	r18, 0x10	; 16
 6e2:	32 e0       	ldi	r19, 0x02	; 2
 6e4:	f8 01       	movw	r30, r16
 6e6:	b7 fe       	sbrs	r11, 7
 6e8:	07 c0       	rjmp	.+14     	; 0x6f8 <vfprintf+0x290>
 6ea:	60 81       	ld	r22, Z
 6ec:	71 81       	ldd	r23, Z+1	; 0x01
 6ee:	82 81       	ldd	r24, Z+2	; 0x02
 6f0:	93 81       	ldd	r25, Z+3	; 0x03
 6f2:	0c 5f       	subi	r16, 0xFC	; 252
 6f4:	1f 4f       	sbci	r17, 0xFF	; 255
 6f6:	06 c0       	rjmp	.+12     	; 0x704 <vfprintf+0x29c>
 6f8:	60 81       	ld	r22, Z
 6fa:	71 81       	ldd	r23, Z+1	; 0x01
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 5f       	subi	r16, 0xFE	; 254
 702:	1f 4f       	sbci	r17, 0xFF	; 255
 704:	a3 01       	movw	r20, r6
 706:	0e 94 67 04 	call	0x8ce	; 0x8ce <__ultoa_invert>
 70a:	88 2e       	mov	r8, r24
 70c:	86 18       	sub	r8, r6
 70e:	fb 2d       	mov	r31, r11
 710:	ff 77       	andi	r31, 0x7F	; 127
 712:	3f 2e       	mov	r3, r31
 714:	36 fe       	sbrs	r3, 6
 716:	0d c0       	rjmp	.+26     	; 0x732 <vfprintf+0x2ca>
 718:	23 2d       	mov	r18, r3
 71a:	2e 7f       	andi	r18, 0xFE	; 254
 71c:	a2 2e       	mov	r10, r18
 71e:	89 14       	cp	r8, r9
 720:	58 f4       	brcc	.+22     	; 0x738 <vfprintf+0x2d0>
 722:	34 fe       	sbrs	r3, 4
 724:	0b c0       	rjmp	.+22     	; 0x73c <vfprintf+0x2d4>
 726:	32 fc       	sbrc	r3, 2
 728:	09 c0       	rjmp	.+18     	; 0x73c <vfprintf+0x2d4>
 72a:	83 2d       	mov	r24, r3
 72c:	8e 7e       	andi	r24, 0xEE	; 238
 72e:	a8 2e       	mov	r10, r24
 730:	05 c0       	rjmp	.+10     	; 0x73c <vfprintf+0x2d4>
 732:	b8 2c       	mov	r11, r8
 734:	a3 2c       	mov	r10, r3
 736:	03 c0       	rjmp	.+6      	; 0x73e <vfprintf+0x2d6>
 738:	b8 2c       	mov	r11, r8
 73a:	01 c0       	rjmp	.+2      	; 0x73e <vfprintf+0x2d6>
 73c:	b9 2c       	mov	r11, r9
 73e:	a4 fe       	sbrs	r10, 4
 740:	0f c0       	rjmp	.+30     	; 0x760 <vfprintf+0x2f8>
 742:	fe 01       	movw	r30, r28
 744:	e8 0d       	add	r30, r8
 746:	f1 1d       	adc	r31, r1
 748:	80 81       	ld	r24, Z
 74a:	80 33       	cpi	r24, 0x30	; 48
 74c:	21 f4       	brne	.+8      	; 0x756 <vfprintf+0x2ee>
 74e:	9a 2d       	mov	r25, r10
 750:	99 7e       	andi	r25, 0xE9	; 233
 752:	a9 2e       	mov	r10, r25
 754:	09 c0       	rjmp	.+18     	; 0x768 <vfprintf+0x300>
 756:	a2 fe       	sbrs	r10, 2
 758:	06 c0       	rjmp	.+12     	; 0x766 <vfprintf+0x2fe>
 75a:	b3 94       	inc	r11
 75c:	b3 94       	inc	r11
 75e:	04 c0       	rjmp	.+8      	; 0x768 <vfprintf+0x300>
 760:	8a 2d       	mov	r24, r10
 762:	86 78       	andi	r24, 0x86	; 134
 764:	09 f0       	breq	.+2      	; 0x768 <vfprintf+0x300>
 766:	b3 94       	inc	r11
 768:	a3 fc       	sbrc	r10, 3
 76a:	11 c0       	rjmp	.+34     	; 0x78e <vfprintf+0x326>
 76c:	a0 fe       	sbrs	r10, 0
 76e:	06 c0       	rjmp	.+12     	; 0x77c <vfprintf+0x314>
 770:	b2 14       	cp	r11, r2
 772:	88 f4       	brcc	.+34     	; 0x796 <vfprintf+0x32e>
 774:	28 0c       	add	r2, r8
 776:	92 2c       	mov	r9, r2
 778:	9b 18       	sub	r9, r11
 77a:	0e c0       	rjmp	.+28     	; 0x798 <vfprintf+0x330>
 77c:	b2 14       	cp	r11, r2
 77e:	60 f4       	brcc	.+24     	; 0x798 <vfprintf+0x330>
 780:	b6 01       	movw	r22, r12
 782:	80 e2       	ldi	r24, 0x20	; 32
 784:	90 e0       	ldi	r25, 0x00	; 0
 786:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 78a:	b3 94       	inc	r11
 78c:	f7 cf       	rjmp	.-18     	; 0x77c <vfprintf+0x314>
 78e:	b2 14       	cp	r11, r2
 790:	18 f4       	brcc	.+6      	; 0x798 <vfprintf+0x330>
 792:	2b 18       	sub	r2, r11
 794:	02 c0       	rjmp	.+4      	; 0x79a <vfprintf+0x332>
 796:	98 2c       	mov	r9, r8
 798:	21 2c       	mov	r2, r1
 79a:	a4 fe       	sbrs	r10, 4
 79c:	10 c0       	rjmp	.+32     	; 0x7be <vfprintf+0x356>
 79e:	b6 01       	movw	r22, r12
 7a0:	80 e3       	ldi	r24, 0x30	; 48
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 7a8:	a2 fe       	sbrs	r10, 2
 7aa:	17 c0       	rjmp	.+46     	; 0x7da <vfprintf+0x372>
 7ac:	a1 fc       	sbrc	r10, 1
 7ae:	03 c0       	rjmp	.+6      	; 0x7b6 <vfprintf+0x34e>
 7b0:	88 e7       	ldi	r24, 0x78	; 120
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	02 c0       	rjmp	.+4      	; 0x7ba <vfprintf+0x352>
 7b6:	88 e5       	ldi	r24, 0x58	; 88
 7b8:	90 e0       	ldi	r25, 0x00	; 0
 7ba:	b6 01       	movw	r22, r12
 7bc:	0c c0       	rjmp	.+24     	; 0x7d6 <vfprintf+0x36e>
 7be:	8a 2d       	mov	r24, r10
 7c0:	86 78       	andi	r24, 0x86	; 134
 7c2:	59 f0       	breq	.+22     	; 0x7da <vfprintf+0x372>
 7c4:	a1 fe       	sbrs	r10, 1
 7c6:	02 c0       	rjmp	.+4      	; 0x7cc <vfprintf+0x364>
 7c8:	8b e2       	ldi	r24, 0x2B	; 43
 7ca:	01 c0       	rjmp	.+2      	; 0x7ce <vfprintf+0x366>
 7cc:	80 e2       	ldi	r24, 0x20	; 32
 7ce:	a7 fc       	sbrc	r10, 7
 7d0:	8d e2       	ldi	r24, 0x2D	; 45
 7d2:	b6 01       	movw	r22, r12
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 7da:	89 14       	cp	r8, r9
 7dc:	38 f4       	brcc	.+14     	; 0x7ec <vfprintf+0x384>
 7de:	b6 01       	movw	r22, r12
 7e0:	80 e3       	ldi	r24, 0x30	; 48
 7e2:	90 e0       	ldi	r25, 0x00	; 0
 7e4:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 7e8:	9a 94       	dec	r9
 7ea:	f7 cf       	rjmp	.-18     	; 0x7da <vfprintf+0x372>
 7ec:	8a 94       	dec	r8
 7ee:	f3 01       	movw	r30, r6
 7f0:	e8 0d       	add	r30, r8
 7f2:	f1 1d       	adc	r31, r1
 7f4:	80 81       	ld	r24, Z
 7f6:	b6 01       	movw	r22, r12
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 7fe:	81 10       	cpse	r8, r1
 800:	f5 cf       	rjmp	.-22     	; 0x7ec <vfprintf+0x384>
 802:	22 20       	and	r2, r2
 804:	09 f4       	brne	.+2      	; 0x808 <vfprintf+0x3a0>
 806:	42 ce       	rjmp	.-892    	; 0x48c <vfprintf+0x24>
 808:	b6 01       	movw	r22, r12
 80a:	80 e2       	ldi	r24, 0x20	; 32
 80c:	90 e0       	ldi	r25, 0x00	; 0
 80e:	0e 94 2b 04 	call	0x856	; 0x856 <fputc>
 812:	2a 94       	dec	r2
 814:	f6 cf       	rjmp	.-20     	; 0x802 <vfprintf+0x39a>
 816:	f6 01       	movw	r30, r12
 818:	86 81       	ldd	r24, Z+6	; 0x06
 81a:	97 81       	ldd	r25, Z+7	; 0x07
 81c:	02 c0       	rjmp	.+4      	; 0x822 <vfprintf+0x3ba>
 81e:	8f ef       	ldi	r24, 0xFF	; 255
 820:	9f ef       	ldi	r25, 0xFF	; 255
 822:	2b 96       	adiw	r28, 0x0b	; 11
 824:	e2 e1       	ldi	r30, 0x12	; 18
 826:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__epilogue_restores__>

0000082a <strnlen_P>:
 82a:	fc 01       	movw	r30, r24
 82c:	05 90       	lpm	r0, Z+
 82e:	61 50       	subi	r22, 0x01	; 1
 830:	70 40       	sbci	r23, 0x00	; 0
 832:	01 10       	cpse	r0, r1
 834:	d8 f7       	brcc	.-10     	; 0x82c <strnlen_P+0x2>
 836:	80 95       	com	r24
 838:	90 95       	com	r25
 83a:	8e 0f       	add	r24, r30
 83c:	9f 1f       	adc	r25, r31
 83e:	08 95       	ret

00000840 <strnlen>:
 840:	fc 01       	movw	r30, r24
 842:	61 50       	subi	r22, 0x01	; 1
 844:	70 40       	sbci	r23, 0x00	; 0
 846:	01 90       	ld	r0, Z+
 848:	01 10       	cpse	r0, r1
 84a:	d8 f7       	brcc	.-10     	; 0x842 <strnlen+0x2>
 84c:	80 95       	com	r24
 84e:	90 95       	com	r25
 850:	8e 0f       	add	r24, r30
 852:	9f 1f       	adc	r25, r31
 854:	08 95       	ret

00000856 <fputc>:
 856:	0f 93       	push	r16
 858:	1f 93       	push	r17
 85a:	cf 93       	push	r28
 85c:	df 93       	push	r29
 85e:	fb 01       	movw	r30, r22
 860:	23 81       	ldd	r18, Z+3	; 0x03
 862:	21 fd       	sbrc	r18, 1
 864:	03 c0       	rjmp	.+6      	; 0x86c <fputc+0x16>
 866:	8f ef       	ldi	r24, 0xFF	; 255
 868:	9f ef       	ldi	r25, 0xFF	; 255
 86a:	2c c0       	rjmp	.+88     	; 0x8c4 <fputc+0x6e>
 86c:	22 ff       	sbrs	r18, 2
 86e:	16 c0       	rjmp	.+44     	; 0x89c <fputc+0x46>
 870:	46 81       	ldd	r20, Z+6	; 0x06
 872:	57 81       	ldd	r21, Z+7	; 0x07
 874:	24 81       	ldd	r18, Z+4	; 0x04
 876:	35 81       	ldd	r19, Z+5	; 0x05
 878:	42 17       	cp	r20, r18
 87a:	53 07       	cpc	r21, r19
 87c:	44 f4       	brge	.+16     	; 0x88e <fputc+0x38>
 87e:	a0 81       	ld	r26, Z
 880:	b1 81       	ldd	r27, Z+1	; 0x01
 882:	9d 01       	movw	r18, r26
 884:	2f 5f       	subi	r18, 0xFF	; 255
 886:	3f 4f       	sbci	r19, 0xFF	; 255
 888:	31 83       	std	Z+1, r19	; 0x01
 88a:	20 83       	st	Z, r18
 88c:	8c 93       	st	X, r24
 88e:	26 81       	ldd	r18, Z+6	; 0x06
 890:	37 81       	ldd	r19, Z+7	; 0x07
 892:	2f 5f       	subi	r18, 0xFF	; 255
 894:	3f 4f       	sbci	r19, 0xFF	; 255
 896:	37 83       	std	Z+7, r19	; 0x07
 898:	26 83       	std	Z+6, r18	; 0x06
 89a:	14 c0       	rjmp	.+40     	; 0x8c4 <fputc+0x6e>
 89c:	8b 01       	movw	r16, r22
 89e:	ec 01       	movw	r28, r24
 8a0:	fb 01       	movw	r30, r22
 8a2:	00 84       	ldd	r0, Z+8	; 0x08
 8a4:	f1 85       	ldd	r31, Z+9	; 0x09
 8a6:	e0 2d       	mov	r30, r0
 8a8:	09 95       	icall
 8aa:	89 2b       	or	r24, r25
 8ac:	e1 f6       	brne	.-72     	; 0x866 <fputc+0x10>
 8ae:	d8 01       	movw	r26, r16
 8b0:	16 96       	adiw	r26, 0x06	; 6
 8b2:	8d 91       	ld	r24, X+
 8b4:	9c 91       	ld	r25, X
 8b6:	17 97       	sbiw	r26, 0x07	; 7
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	17 96       	adiw	r26, 0x07	; 7
 8bc:	9c 93       	st	X, r25
 8be:	8e 93       	st	-X, r24
 8c0:	16 97       	sbiw	r26, 0x06	; 6
 8c2:	ce 01       	movw	r24, r28
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	1f 91       	pop	r17
 8ca:	0f 91       	pop	r16
 8cc:	08 95       	ret

000008ce <__ultoa_invert>:
 8ce:	fa 01       	movw	r30, r20
 8d0:	aa 27       	eor	r26, r26
 8d2:	28 30       	cpi	r18, 0x08	; 8
 8d4:	51 f1       	breq	.+84     	; 0x92a <__stack+0x2b>
 8d6:	20 31       	cpi	r18, 0x10	; 16
 8d8:	81 f1       	breq	.+96     	; 0x93a <__stack+0x3b>
 8da:	e8 94       	clt
 8dc:	6f 93       	push	r22
 8de:	6e 7f       	andi	r22, 0xFE	; 254
 8e0:	6e 5f       	subi	r22, 0xFE	; 254
 8e2:	7f 4f       	sbci	r23, 0xFF	; 255
 8e4:	8f 4f       	sbci	r24, 0xFF	; 255
 8e6:	9f 4f       	sbci	r25, 0xFF	; 255
 8e8:	af 4f       	sbci	r26, 0xFF	; 255
 8ea:	b1 e0       	ldi	r27, 0x01	; 1
 8ec:	3e d0       	rcall	.+124    	; 0x96a <__stack+0x6b>
 8ee:	b4 e0       	ldi	r27, 0x04	; 4
 8f0:	3c d0       	rcall	.+120    	; 0x96a <__stack+0x6b>
 8f2:	67 0f       	add	r22, r23
 8f4:	78 1f       	adc	r23, r24
 8f6:	89 1f       	adc	r24, r25
 8f8:	9a 1f       	adc	r25, r26
 8fa:	a1 1d       	adc	r26, r1
 8fc:	68 0f       	add	r22, r24
 8fe:	79 1f       	adc	r23, r25
 900:	8a 1f       	adc	r24, r26
 902:	91 1d       	adc	r25, r1
 904:	a1 1d       	adc	r26, r1
 906:	6a 0f       	add	r22, r26
 908:	71 1d       	adc	r23, r1
 90a:	81 1d       	adc	r24, r1
 90c:	91 1d       	adc	r25, r1
 90e:	a1 1d       	adc	r26, r1
 910:	20 d0       	rcall	.+64     	; 0x952 <__stack+0x53>
 912:	09 f4       	brne	.+2      	; 0x916 <__stack+0x17>
 914:	68 94       	set
 916:	3f 91       	pop	r19
 918:	2a e0       	ldi	r18, 0x0A	; 10
 91a:	26 9f       	mul	r18, r22
 91c:	11 24       	eor	r1, r1
 91e:	30 19       	sub	r19, r0
 920:	30 5d       	subi	r19, 0xD0	; 208
 922:	31 93       	st	Z+, r19
 924:	de f6       	brtc	.-74     	; 0x8dc <__ultoa_invert+0xe>
 926:	cf 01       	movw	r24, r30
 928:	08 95       	ret
 92a:	46 2f       	mov	r20, r22
 92c:	47 70       	andi	r20, 0x07	; 7
 92e:	40 5d       	subi	r20, 0xD0	; 208
 930:	41 93       	st	Z+, r20
 932:	b3 e0       	ldi	r27, 0x03	; 3
 934:	0f d0       	rcall	.+30     	; 0x954 <__stack+0x55>
 936:	c9 f7       	brne	.-14     	; 0x92a <__stack+0x2b>
 938:	f6 cf       	rjmp	.-20     	; 0x926 <__stack+0x27>
 93a:	46 2f       	mov	r20, r22
 93c:	4f 70       	andi	r20, 0x0F	; 15
 93e:	40 5d       	subi	r20, 0xD0	; 208
 940:	4a 33       	cpi	r20, 0x3A	; 58
 942:	18 f0       	brcs	.+6      	; 0x94a <__stack+0x4b>
 944:	49 5d       	subi	r20, 0xD9	; 217
 946:	31 fd       	sbrc	r19, 1
 948:	40 52       	subi	r20, 0x20	; 32
 94a:	41 93       	st	Z+, r20
 94c:	02 d0       	rcall	.+4      	; 0x952 <__stack+0x53>
 94e:	a9 f7       	brne	.-22     	; 0x93a <__stack+0x3b>
 950:	ea cf       	rjmp	.-44     	; 0x926 <__stack+0x27>
 952:	b4 e0       	ldi	r27, 0x04	; 4
 954:	a6 95       	lsr	r26
 956:	97 95       	ror	r25
 958:	87 95       	ror	r24
 95a:	77 95       	ror	r23
 95c:	67 95       	ror	r22
 95e:	ba 95       	dec	r27
 960:	c9 f7       	brne	.-14     	; 0x954 <__stack+0x55>
 962:	00 97       	sbiw	r24, 0x00	; 0
 964:	61 05       	cpc	r22, r1
 966:	71 05       	cpc	r23, r1
 968:	08 95       	ret
 96a:	9b 01       	movw	r18, r22
 96c:	ac 01       	movw	r20, r24
 96e:	0a 2e       	mov	r0, r26
 970:	06 94       	lsr	r0
 972:	57 95       	ror	r21
 974:	47 95       	ror	r20
 976:	37 95       	ror	r19
 978:	27 95       	ror	r18
 97a:	ba 95       	dec	r27
 97c:	c9 f7       	brne	.-14     	; 0x970 <__stack+0x71>
 97e:	62 0f       	add	r22, r18
 980:	73 1f       	adc	r23, r19
 982:	84 1f       	adc	r24, r20
 984:	95 1f       	adc	r25, r21
 986:	a0 1d       	adc	r26, r0
 988:	08 95       	ret

0000098a <__prologue_saves__>:
 98a:	2f 92       	push	r2
 98c:	3f 92       	push	r3
 98e:	4f 92       	push	r4
 990:	5f 92       	push	r5
 992:	6f 92       	push	r6
 994:	7f 92       	push	r7
 996:	8f 92       	push	r8
 998:	9f 92       	push	r9
 99a:	af 92       	push	r10
 99c:	bf 92       	push	r11
 99e:	cf 92       	push	r12
 9a0:	df 92       	push	r13
 9a2:	ef 92       	push	r14
 9a4:	ff 92       	push	r15
 9a6:	0f 93       	push	r16
 9a8:	1f 93       	push	r17
 9aa:	cf 93       	push	r28
 9ac:	df 93       	push	r29
 9ae:	cd b7       	in	r28, 0x3d	; 61
 9b0:	de b7       	in	r29, 0x3e	; 62
 9b2:	ca 1b       	sub	r28, r26
 9b4:	db 0b       	sbc	r29, r27
 9b6:	0f b6       	in	r0, 0x3f	; 63
 9b8:	f8 94       	cli
 9ba:	de bf       	out	0x3e, r29	; 62
 9bc:	0f be       	out	0x3f, r0	; 63
 9be:	cd bf       	out	0x3d, r28	; 61
 9c0:	09 94       	ijmp

000009c2 <__epilogue_restores__>:
 9c2:	2a 88       	ldd	r2, Y+18	; 0x12
 9c4:	39 88       	ldd	r3, Y+17	; 0x11
 9c6:	48 88       	ldd	r4, Y+16	; 0x10
 9c8:	5f 84       	ldd	r5, Y+15	; 0x0f
 9ca:	6e 84       	ldd	r6, Y+14	; 0x0e
 9cc:	7d 84       	ldd	r7, Y+13	; 0x0d
 9ce:	8c 84       	ldd	r8, Y+12	; 0x0c
 9d0:	9b 84       	ldd	r9, Y+11	; 0x0b
 9d2:	aa 84       	ldd	r10, Y+10	; 0x0a
 9d4:	b9 84       	ldd	r11, Y+9	; 0x09
 9d6:	c8 84       	ldd	r12, Y+8	; 0x08
 9d8:	df 80       	ldd	r13, Y+7	; 0x07
 9da:	ee 80       	ldd	r14, Y+6	; 0x06
 9dc:	fd 80       	ldd	r15, Y+5	; 0x05
 9de:	0c 81       	ldd	r16, Y+4	; 0x04
 9e0:	1b 81       	ldd	r17, Y+3	; 0x03
 9e2:	aa 81       	ldd	r26, Y+2	; 0x02
 9e4:	b9 81       	ldd	r27, Y+1	; 0x01
 9e6:	ce 0f       	add	r28, r30
 9e8:	d1 1d       	adc	r29, r1
 9ea:	0f b6       	in	r0, 0x3f	; 63
 9ec:	f8 94       	cli
 9ee:	de bf       	out	0x3e, r29	; 62
 9f0:	0f be       	out	0x3f, r0	; 63
 9f2:	cd bf       	out	0x3d, r28	; 61
 9f4:	ed 01       	movw	r28, r26
 9f6:	08 95       	ret

000009f8 <_exit>:
 9f8:	f8 94       	cli

000009fa <__stop_program>:
 9fa:	ff cf       	rjmp	.-2      	; 0x9fa <__stop_program>
